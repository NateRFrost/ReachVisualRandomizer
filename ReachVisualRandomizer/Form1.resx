<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHCAAAAEAIACoDgAAFgAAACgAAAAcAAAAQAAAAAEAIAAAAAAAAA4AACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARExEADA4LFhQYGZgdIiHyICUj/x8j
        I/8cHyHzGBsbmBERERYXFxcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwAAAAABEhURNBkcGbQgJCP8ICQi/yAkIv8fIyL/HiIi/yYp
        K/wjJymzFRoYNAAAAAEGBgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABcVEwAWExAVGBgXgxseHOIgIyH/Jioq/ykwMP8pLzD/KjAy/ykuMP8pLTD/KC4w/yQq
        KuMhJiaEExQUFRkcHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgMCACos
        KgARExEnHBwasCAhH/0fIyL/ISQm/ygqLP8wNDT/MTU3/zA2OP8uNDX/Ki8y/ykvMf8qMDD/LTEx/SYm
        J7AWGBYoOz86AAIDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEhMSAAsNCwkXGBdWHh8e0SIm
        I/8hJSP/HyQj/yUpK/8yOj7/PEdM/zxHTf89SlL/R1xp/z9PWP8vNTn/LjM1/y82OP8tMDL/JCcn0xgc
        G1cICwcKDhINAAAAAAAAAAAAAAAAAAAAAAAAAAAAERQRAA8SDxMeIB6fISQj9SMmJP8lKSn/IiYm/ysu
        MP80PUH/OUVL/zI9RP8uOD7/Mz1D/0dfbP9Vdon/QFFe/zA5Pf8xOj3/Mjs//y0xM/8mKyr2IygnoBMU
        FhQVFxcAAAAAAAAAAAAAAAAADA0MAAUHBQsbGxuTJigm/CQmJf8lJiX/IiYj/ygsLP82PEL/OURK/yAm
        KP8RFRT/ICQm/ygtL/8rMDL/O0pU/0RXZf89SlH/MTk7/zQ+QP82PkH/Mjc4/zE2N/0dISOTBwcICw0O
        DgAAAAAAAAAAAQAAAAYVFxVwISIh+SUmJf8jJCP/ISMi/yIoJ/8pLi7/MjY5/ysxM/8QExL/HSEh/yYq
        LP8oLS//KC0v/ygqLP83QUf/QFFa/zpIUv8sNDf/MTk8/zhBRf83P0H/KC0u+RweH3EAAAAGBgoEARAS
        EEYSFRKzGhsa6iEiIf8hIyL/IiMi/yMnJv8nLCz/JSgp/yElJ/8kKy7/GyIk/yQpKv8oLC3/Ki4x/ykx
        NP8rO0P/NEpX/zZGT/9AUF3/Nj5F/yYrLP8qMTT/MTc5/yswMv8hJCfqExgXsxIXFkYWGhfYGBsZ/x0f
        Hf8hIyH/ISYm/yYrKv8nLC3/JSko/yEkJf8rOD7/M01c/y9IV/8wRlP/MExc/zJVaf87bIb/Q4Gh/0KA
        nP82Wm7/NEFL/z5JVP83PUP/N0NK/y85Pf8pMDD/JSkr/x8kJf8fJCbZGh0a/RocGv8dIR//IiYl/yYs
        Lf8nLi//KCss/yAiIP8lMjX/NFpr/zluiP8+eZL/PnmN/zx6kf9Ciqv/TJzH/1Os5P9MotH/QoGg/y5J
        WP8yO0H/QE9Z/z9SY/82SFT/LDY6/yUqLP8oLjD/Ki4w/RocGvgaHBz/HyQj/yYrKv8oLy//KC0t/yIj
        Iv8dISD/ME5b/z9+lv9Fjan/TZ+4/0OUp/9CjqP/R53D/1Ot2v9nyvz/Vbbz/02ey/84YXb/KDE1/zY/
        R/9FVGX/PlFg/zZHUf8nMDL/Ji4u/ygsLfgYGxvyGx4e/yIoJ/8pLi3/KS0t/yImI/8dHx3/Iyss/zhl
        eP9Bhp7/VKW5/1Srvv9Cmav/Qo+k/0Wdxf9QrNr/dtf7/2DD/P9Oo9T/P3iV/yw/Sv8pLTH/OUZR/0BS
        Xv9AUVr/Mj9F/yQrLv8nLC3yHB8f7B8iIf8jJiX/KC0s/yMnJf8aIB//GR8f/ypASf83Y3f/OWR0/02S
        nv9IlKX/P4if/z9+lf9DjbH/SJjA/2XD5v9cuuz/SZfE/0OBoP82W3D/KCwv/ysxNv83Q0n/QE9Y/zQ8
        Qv8sNDf/LDE27iIkIsIjJyX/HyMh/yEkI/8bICD/GB4f/yAsMP80WGb/NVRh/zBES/8zTFL/M1Ne/zZg
        dv84a4f/PXua/0CBoP9Ei6r/RIip/0KEpP9Ehab/QHiU/zFGUv8oLC7/KzE0/zE6P/8wNjr/NT5D/zE3
        PcUdIR+BJCUl/x4gH/8ZHRz/Gh8e/yEqK/8yT1r/OVxq/zNFTf8wPUL/LTtA/y4+RP8yTV3/N2aC/ztx
        jf88eJX/Qoak/0aLqv9Ehab/QoCf/0J9mf89aIL/MD5I/ykuLv8lKy3/KzA0/zE5Pf8lLTGFHiEgZyUn
        JfwfISD/GR0d/x8lJf8xQUb/NVJd/zBESv8uOz//LTk+/yk2Ov8nNTf/Jzc7/yk8Rv8sQk3/LkdX/zZb
        cv8/co7/P3WU/ztoh/89bYn/P3CN/zhWbP8rNz3/Jiwu/y0zOP8zOD38IygraBseHlEkKCX2ISIi/xkb
        G/8kKiv/M0FG/y4+Q/8mMTP/JS8w/yQsLv8hKCj/HSUk/xsjI/8aISP/GiIj/xwlJ/8hLDD/JjQ8/yg5
        Q/8qPEj/MUdX/zRRY/8wRFH/KTc+/yYtLv8yO0H/Nj5C9iMoKVAaHR0tJScm5CMjJP8ZGxr/HiQk/yYt
        MP8fJyj/GR4d/xgcGv8YGxj/FxoW/xUYFP8UFRT/FxcX/xcXF/8SExH/DxMQ/xcbGf8YHRv/GSAf/yAp
        K/8jLTL/Iiww/yApLP8mLi//PElS/zlFSuQdJCUtDBESCyMnJ7YjJib/GRwa/xkdG/8bHh3/GR0b/xYa
        GP8VGBf/FRgW/xUYGP8WGRn/Jykp/yosLP8oKyr/Jioo/xUaGv8WGRr/Fhob/xkfIP8gJyj/HiQm/x0j
        Jv8fJCb/KS8y/0RVYv82QUi3BwUFCykrKAAcHx1uIyYk/h8hH/8gIyH/IiUk/yYqJ/8rLy7/LjQ3/zE4
        Of8zPD7/MTc5/zE2Nf8tMTH/KS0s/zY/QP9PZnH/RFhg/zhESP81PkL/Mjs8/zE3Ov8vNTr/MDQ4/zI3
        O/9GVWP+MTlAcFxwfgATFhMAERURExweHJsiJCL7Jicm/yQmJf8pLCv/NDk7/zdARP85QkX/OUJF/zU9
        QP83Pz//LTM1/y0zNf9JWV3/YnyJ/1t4hf9MYGv/Qk5X/zQ7QP8yODz/NTxB/zc+Qv8zOT77NT1GmiYr
        MhMoLjUAAAAAABgYGAAWFRYcIyMj1ygoKP8mKCf/MDY4/z5HSf87RUj/PEVJ/zxGSf86RUf/QE1M/z9M
        UP8+SU3/Slpd/1Jncv9TbXn/SV5o/0RTXP86Q0f/Mzo9/zY8Qf85QEb/Ljc52BIXFRwUGhgAAAAAAAAA
        AAAYGRgAFRYVFCMjI9InJif/LC0t/z5JS/9DUFL/QExP/0JPUv9GU1r/SVde/0lWX/9LWmP/S1pl/0la
        ZP9QYmv/UWdw/0xeaP9JWmP/P01R/zlFSP8xOj7/Nj9G/zM9QtIUGBUUFRoYAAAAAAAAAAAAGBoYABUX
        FREhJCTMIyYm/zA0Nf9CT1T/PElM/ztIS/8+S07/RFBX/0tZYv9LWWL/SVVc/0lXYf9JWWL/Slpj/0ta
        Yv9HV17/SFdd/0FPVf89Sk//MTo+/zQ7P/83Q0bMExkZERUcGwAAAAAAAAAAABYXGAAAAAAAGx4fgiEl
        JP8vNDb/P0pN/z1ITP89SU7/PkpP/z5LT/9BUVL/QU9R/0BMTf9BTU//QlBT/0VUV/9GVFj/SVde/0xc
        Yf9HVVz/O0VK/zM7Pf8yNzv/LDQ2gwAAAAARFhQAAAAAAAAAAAAAAAAAExUUABERER0iJSXRLzY3/zhE
        Rv88SEj/QE5R/z9KTv9CT1H/QVBS/0NRU/9EUlP/Qk9P/0BOT/9BUFD/Q1FT/0VSV/9JWl7/R1lg/z9M
        Tv84QkT/LTQ40xofICAbICIAAAAAAAAAAAAAAAAAAAAAAAgICABRV10AICMjgDM4Of83QUH/OEFB/z5J
        S/8/S07/R1RV/0BKT/9CTVH/SVZa/0RRU/8+Skv/PkhL/0NSU/8/T0//RFNU/0VTVf9BUFP/PEhK/yYt
        L4FufYMABgoKAAAAAAAAAAAAAAAAAAAAAAAAAAAAHR4dABgaGCQwMzLPOD5A/zlCQv87RUj/PkpN/0ZU
        Vv9ET1T/QlBT/0ZUVv9HVFb/RVNU/0ZSWP9IV1z/QlBS/0JSU/9BT1H/QU9R/zlERs8fJSYlJSwtAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGBgBAR0IAIyclQy82Nd84QUH/O0VI/z5LTf8/Skr/R1NW/0ZV
        V/9HVlj/SVZZ/0pYXP9JWF3/QU5Q/0NQUv9CUFP/QE1R/zpER+ApMDJDSVdZAAcFBwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACQ0NAP///wAeJSQ/MDU2tDY9P+47RUj/OEA//0RRUf9EUlT/RVRX/0VU
        Vv9IVlr/RlRY/zdAQf89SEv+PEZK7zU/QrYmKy9AAAAAAAcHCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHyQhABATDwwhJidELTEzgC8yMqA2Pz++NUJC1zhGRus5RUfoO0VI0zQ/
        QbksMzWdKjI0fyQrLUQUGBkNOkZIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/AP/D/AA/w/gAH8PwA
        A/DwAADw4AAAcMAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgAAAEIAAABDAAAAwwAAAMMAAADDgAABw4AAAcPAAAPDwAADw+AAB8PwAA/D+AAfw
</value>
  </data>
</root>